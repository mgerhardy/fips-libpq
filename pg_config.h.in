/* src/include/pg_config.h.in.  Generated from configure.in by autoheader.  */

/* Define to the type of arg 1 of 'accept' */
#cmakedefine ACCEPT_TYPE_ARG1

/* Define to the type of arg 2 of 'accept' */
#cmakedefine ACCEPT_TYPE_ARG2

/* Define to the type of arg 3 of 'accept' */
#cmakedefine ACCEPT_TYPE_ARG3

/* Define to the return type of 'accept' */
#cmakedefine ACCEPT_TYPE_RETURN

/* Define if building universal (internal helper macro) */
#cmakedefine AC_APPLE_UNIVERSAL_BUILD

/* The normal alignment of `double', in bytes. */
#cmakedefine ALIGNOF_DOUBLE

/* The normal alignment of `int', in bytes. */
#cmakedefine ALIGNOF_INT

/* The normal alignment of `long', in bytes. */
#cmakedefine ALIGNOF_LONG

/* The normal alignment of `long long int', in bytes. */
#cmakedefine ALIGNOF_LONG_LONG_INT

/* The normal alignment of `short', in bytes. */
#cmakedefine ALIGNOF_SHORT

/* Size of a disk block --- this also limits the size of a tuple. You can set
   it bigger if you need bigger tuples (although TOAST should reduce the need
   to have large tuples, since fields can be spread across multiple tuples).
   BLCKSZ must be a power of 2. The maximum possible value of BLCKSZ is
   currently 2^15 (32768). This is determined by the 15-bit widths of the
   lp_off and lp_len fields in ItemIdData (see include/storage/itemid.h).
   Changing BLCKSZ requires an initdb. */
#cmakedefine BLCKSZ

/* Define to the default TCP port number on which the server listens and to
   which clients will try to connect. This can be overridden at run-time, but
   it's convenient if your clients have the right default compiled in.
   (--with-pgport=PORTNUM) */
#cmakedefine DEF_PGPORT

/* Define to the default TCP port number as a string constant. */
#cmakedefine DEF_PGPORT_STR

/* Define to build with GSSAPI support. (--with-gssapi) */
#cmakedefine ENABLE_GSS

/* Define to 1 if you want National Language Support. (--enable-nls) */
#cmakedefine ENABLE_NLS

/* Define to 1 to build client libraries as thread-safe code.
   (--enable-thread-safety) */
#cmakedefine ENABLE_THREAD_SAFETY

/* Define to nothing if C supports flexible array members, and to 1 if it does
   not. That way, with a declaration like `struct s { int n; double
   d[FLEXIBLE_ARRAY_MEMBER]; };', the struct hack can be used with pre-C99
   compilers. When computing the size of such an object, don't use 'sizeof
   (struct s)' as it overestimates the size. Use 'offsetof (struct s, d)'
   instead. Don't use 'offsetof (struct s, d[0])', as this doesn't work with
   MSVC and with C++ compilers. */
#cmakedefine FLEXIBLE_ARRAY_MEMBER

/* float4 values are passed by value if 'true', by reference if 'false' */
#cmakedefine FLOAT4PASSBYVAL

/* float8, int8, and related values are passed by value if 'true', by
   reference if 'false' */
#cmakedefine FLOAT8PASSBYVAL

/* Define to 1 if gettimeofday() takes only 1 argument. */
#cmakedefine GETTIMEOFDAY_1ARG

#ifdef GETTIMEOFDAY_1ARG
# define gettimeofday(a,b) gettimeofday(a)
#endif

/* Define to 1 if you have the `append_history' function. */
#cmakedefine HAVE_APPEND_HISTORY

/* Define to 1 if you want to use atomics if available. */
#cmakedefine HAVE_ATOMICS

/* Define to 1 if you have the <atomic.h> header file. */
#cmakedefine HAVE_ATOMIC_H

/* Define to 1 if you have the `cbrt' function. */
#cmakedefine HAVE_CBRT

/* Define to 1 if you have the `class' function. */
#cmakedefine HAVE_CLASS

/* Define to 1 if you have the <crtdefs.h> header file. */
#cmakedefine HAVE_CRTDEFS_H

/* Define to 1 if you have the `crypt' function. */
#cmakedefine HAVE_CRYPT

/* Define to 1 if you have the <crypt.h> header file. */
#cmakedefine HAVE_CRYPT_H

/* Define to 1 if you have the declaration of `fdatasync', and to 0 if you
   don't. */
#cmakedefine HAVE_DECL_FDATASYNC

/* Define to 1 if you have the declaration of `F_FULLFSYNC', and to 0 if you
   don't. */
#cmakedefine HAVE_DECL_F_FULLFSYNC

/* Define to 1 if you have the declaration of `posix_fadvise', and to 0 if you
   don't. */
#cmakedefine HAVE_DECL_POSIX_FADVISE

/* Define to 1 if you have the declaration of `snprintf', and to 0 if you
   don't. */
#cmakedefine HAVE_DECL_SNPRINTF

/* Define to 1 if you have the declaration of `strlcat', and to 0 if you
   don't. */
#cmakedefine HAVE_DECL_STRLCAT

/* Define to 1 if you have the declaration of `strlcpy', and to 0 if you
   don't. */
#cmakedefine HAVE_DECL_STRLCPY

/* Define to 1 if you have the declaration of `sys_siglist', and to 0 if you
   don't. */
#cmakedefine HAVE_DECL_SYS_SIGLIST

/* Define to 1 if you have the declaration of `vsnprintf', and to 0 if you
   don't. */
#cmakedefine HAVE_DECL_VSNPRINTF

/* Define to 1 if you have the <dld.h> header file. */
#cmakedefine HAVE_DLD_H

/* Define to 1 if you have the `dlopen' function. */
#cmakedefine HAVE_DLOPEN

/* Define to 1 if you have the <editline/history.h> header file. */
#cmakedefine HAVE_EDITLINE_HISTORY_H

/* Define to 1 if you have the <editline/readline.h> header file. */
#cmakedefine HAVE_EDITLINE_READLINE_H

/* Define to 1 if you have the `fdatasync' function. */
#cmakedefine HAVE_FDATASYNC

/* Define to 1 if you have the `fls' function. */
#cmakedefine HAVE_FLS

/* Define to 1 if you have the `fpclass' function. */
#cmakedefine HAVE_FPCLASS

/* Define to 1 if you have the `fp_class' function. */
#cmakedefine HAVE_FP_CLASS

/* Define to 1 if you have the `fp_class_d' function. */
#cmakedefine HAVE_FP_CLASS_D

/* Define to 1 if you have the <fp_class.h> header file. */
#cmakedefine HAVE_FP_CLASS_H

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#cmakedefine HAVE_FSEEKO

/* Define to 1 if your compiler understands __func__. */
#cmakedefine HAVE_FUNCNAME__FUNC

/* Define to 1 if your compiler understands __FUNCTION__. */
#cmakedefine HAVE_FUNCNAME__FUNCTION

/* Define to 1 if you have __atomic_compare_exchange_n(int *, int *, int). */
#cmakedefine HAVE_GCC__ATOMIC_INT32_CAS

/* Define to 1 if you have __atomic_compare_exchange_n(int64 *, int *, int64).
   */
#cmakedefine HAVE_GCC__ATOMIC_INT64_CAS

/* Define to 1 if you have __sync_lock_test_and_set(char *) and friends. */
#cmakedefine HAVE_GCC__SYNC_CHAR_TAS

/* Define to 1 if you have __sync_compare_and_swap(int *, int, int). */
#cmakedefine HAVE_GCC__SYNC_INT32_CAS

/* Define to 1 if you have __sync_lock_test_and_set(int *) and friends. */
#cmakedefine HAVE_GCC__SYNC_INT32_TAS

/* Define to 1 if you have __sync_compare_and_swap(int64 *, int64, int64). */
#cmakedefine HAVE_GCC__SYNC_INT64_CAS

/* Define to 1 if you have the `getaddrinfo' function. */
#cmakedefine HAVE_GETADDRINFO

/* Define to 1 if you have the `gethostbyname_r' function. */
#cmakedefine HAVE_GETHOSTBYNAME_R

/* Define to 1 if you have the `getifaddrs' function. */
#cmakedefine HAVE_GETIFADDRS

/* Define to 1 if you have the `getopt' function. */
#cmakedefine HAVE_GETOPT

/* Define to 1 if you have the <getopt.h> header file. */
#cmakedefine HAVE_GETOPT_H

/* Define to 1 if you have the `getopt_long' function. */
#cmakedefine HAVE_GETOPT_LONG

/* Define to 1 if you have the `getpeereid' function. */
#cmakedefine HAVE_GETPEEREID

/* Define to 1 if you have the `getpeerucred' function. */
#cmakedefine HAVE_GETPEERUCRED

/* Define to 1 if you have the `getpwuid_r' function. */
#cmakedefine HAVE_GETPWUID_R

/* Define to 1 if you have the `getrlimit' function. */
#cmakedefine HAVE_GETRLIMIT

/* Define to 1 if you have the `getrusage' function. */
#cmakedefine HAVE_GETRUSAGE

/* Define to 1 if you have the `gettimeofday' function. */
#cmakedefine HAVE_GETTIMEOFDAY

/* Define to 1 if you have the <gssapi/gssapi.h> header file. */
#cmakedefine HAVE_GSSAPI_GSSAPI_H

/* Define to 1 if you have the <gssapi.h> header file. */
#cmakedefine HAVE_GSSAPI_H

/* Define to 1 if you have the <history.h> header file. */
#cmakedefine HAVE_HISTORY_H

/* Define to 1 if you have the `history_truncate_file' function. */
#cmakedefine HAVE_HISTORY_TRUNCATE_FILE

/* Define to 1 if you have the <ieeefp.h> header file. */
#cmakedefine HAVE_IEEEFP_H

/* Define to 1 if you have the <ifaddrs.h> header file. */
#cmakedefine HAVE_IFADDRS_H

/* Define to 1 if you have the `inet_aton' function. */
#cmakedefine HAVE_INET_ATON

/* Define to 1 if the system has the type `int64'. */
#cmakedefine HAVE_INT64

/* Define to 1 if the system has the type `int8'. */
#cmakedefine HAVE_INT8

/* Define to 1 if the system has the type `intptr_t'. */
#cmakedefine HAVE_INTPTR_T

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H

/* Define to 1 if you have the global variable 'int opterr'. */
#cmakedefine HAVE_INT_OPTERR

/* Define to 1 if you have the global variable 'int optreset'. */
#cmakedefine HAVE_INT_OPTRESET

/* Define to 1 if you have the global variable 'int timezone'. */
#cmakedefine HAVE_INT_TIMEZONE

/* Define to 1 if you have support for IPv6. */
#cmakedefine HAVE_IPV6

/* Define to 1 if you have isinf(). */
#cmakedefine HAVE_ISINF

/* Define to 1 if you have the <langinfo.h> header file. */
#cmakedefine HAVE_LANGINFO_H

/* Define to 1 if you have the <ldap.h> header file. */
#cmakedefine HAVE_LDAP_H

/* Define to 1 if you have the `crypto' library (-lcrypto). */
#cmakedefine HAVE_LIBCRYPTO

/* Define to 1 if you have the `ldap' library (-lldap). */
#cmakedefine HAVE_LIBLDAP

/* Define to 1 if you have the `ldap_r' library (-lldap_r). */
#cmakedefine HAVE_LIBLDAP_R

/* Define to 1 if you have the `m' library (-lm). */
#cmakedefine HAVE_LIBM

/* Define to 1 if you have the `pam' library (-lpam). */
#cmakedefine HAVE_LIBPAM

/* Define if you have a function readline library */
#cmakedefine HAVE_LIBREADLINE

/* Define to 1 if you have the `selinux' library (-lselinux). */
#cmakedefine HAVE_LIBSELINUX

/* Define to 1 if you have the `ssl' library (-lssl). */
#cmakedefine HAVE_LIBSSL

/* Define to 1 if you have the `wldap32' library (-lwldap32). */
#cmakedefine HAVE_LIBWLDAP32

/* Define to 1 if you have the `xml2' library (-lxml2). */
#cmakedefine HAVE_LIBXML2

/* Define to 1 if you have the `xslt' library (-lxslt). */
#cmakedefine HAVE_LIBXSLT

/* Define to 1 if you have the `z' library (-lz). */
#cmakedefine HAVE_LIBZ

/* Define to 1 if constants of type 'long long int' should have the suffix LL.
   */
#cmakedefine HAVE_LL_CONSTANTS

/* Define to 1 if the system has the type `locale_t'. */
#cmakedefine HAVE_LOCALE_T

/* Define to 1 if `long int' works and is 64 bits. */
#cmakedefine HAVE_LONG_INT_64

/* Define to 1 if the system has the type `long long int'. */
#cmakedefine HAVE_LONG_LONG_INT

/* Define to 1 if `long long int' works and is 64 bits. */
#cmakedefine HAVE_LONG_LONG_INT_64

/* Define to 1 if you have the <mbarrier.h> header file. */
#cmakedefine HAVE_MBARRIER_H

/* Define to 1 if you have the `mbstowcs_l' function. */
#cmakedefine HAVE_MBSTOWCS_L

/* Define to 1 if you have the `memmove' function. */
#cmakedefine HAVE_MEMMOVE

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H

/* Define to 1 if the system has the type `MINIDUMP_TYPE'. */
#cmakedefine HAVE_MINIDUMP_TYPE

/* Define to 1 if you have the `mkdtemp' function. */
#cmakedefine HAVE_MKDTEMP

/* Define to 1 if you have the <netinet/in.h> header file. */
#cmakedefine HAVE_NETINET_IN_H

/* Define to 1 if you have the <netinet/tcp.h> header file. */
#cmakedefine HAVE_NETINET_TCP_H

/* Define to 1 if you have the <net/if.h> header file. */
#cmakedefine HAVE_NET_IF_H

/* Define to 1 if you have the <ossp/uuid.h> header file. */
#cmakedefine HAVE_OSSP_UUID_H

/* Define to 1 if you have the <pam/pam_appl.h> header file. */
#cmakedefine HAVE_PAM_PAM_APPL_H

/* Define to 1 if you have the `poll' function. */
#cmakedefine HAVE_POLL

/* Define to 1 if you have the <poll.h> header file. */
#cmakedefine HAVE_POLL_H

/* Define to 1 if you have the `posix_fadvise' function. */
#cmakedefine HAVE_POSIX_FADVISE

/* Define to 1 if you have the POSIX signal interface. */
#cmakedefine HAVE_POSIX_SIGNALS

/* Define to 1 if the assembler supports PPC's LWARX mutex hint bit. */
#cmakedefine HAVE_PPC_LWARX_MUTEX_HINT

/* Define to 1 if you have the `pstat' function. */
#cmakedefine HAVE_PSTAT

/* Define to 1 if the PS_STRINGS thing exists. */
#cmakedefine HAVE_PS_STRINGS

/* Define to 1 if you have the `pthread_is_threaded_np' function. */
#cmakedefine HAVE_PTHREAD_IS_THREADED_NP

/* Define to 1 if you have the <pwd.h> header file. */
#cmakedefine HAVE_PWD_H

/* Define to 1 if you have the `random' function. */
#cmakedefine HAVE_RANDOM

/* Define to 1 if you have the <readline.h> header file. */
#cmakedefine HAVE_READLINE_H

/* Define to 1 if you have the <readline/history.h> header file. */
#cmakedefine HAVE_READLINE_HISTORY_H

/* Define to 1 if you have the <readline/readline.h> header file. */
#cmakedefine HAVE_READLINE_READLINE_H

/* Define to 1 if you have the `readlink' function. */
#cmakedefine HAVE_READLINK

/* Define to 1 if you have the `rint' function. */
#cmakedefine HAVE_RINT

/* Define to 1 if you have the global variable
   'rl_completion_append_character'. */
#cmakedefine HAVE_RL_COMPLETION_APPEND_CHARACTER

/* Define to 1 if you have the `rl_completion_matches' function. */
#cmakedefine HAVE_RL_COMPLETION_MATCHES

/* Define to 1 if you have the `rl_filename_completion_function' function. */
#cmakedefine HAVE_RL_FILENAME_COMPLETION_FUNCTION

/* Define to 1 if you have the <security/pam_appl.h> header file. */
#cmakedefine HAVE_SECURITY_PAM_APPL_H

/* Define to 1 if you have the `setproctitle' function. */
#cmakedefine HAVE_SETPROCTITLE

/* Define to 1 if you have the `setsid' function. */
#cmakedefine HAVE_SETSID

/* Define to 1 if you have the `shm_open' function. */
#cmakedefine HAVE_SHM_OPEN

/* Define to 1 if you have the `sigprocmask' function. */
#cmakedefine HAVE_SIGPROCMASK

/* Define to 1 if you have sigsetjmp(). */
#cmakedefine HAVE_SIGSETJMP

/* Define to 1 if the system has the type `sig_atomic_t'. */
#cmakedefine HAVE_SIG_ATOMIC_T

/* Define to 1 if you have the `snprintf' function. */
#cmakedefine HAVE_SNPRINTF

/* Define to 1 if you have spinlocks. */
#cmakedefine HAVE_SPINLOCKS

/* Define to 1 if you have the `srandom' function. */
#cmakedefine HAVE_SRANDOM

/* Define to 1 if you have the `SSL_get_current_compression' function. */
#cmakedefine HAVE_SSL_GET_CURRENT_COMPRESSION

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H

/* Define to 1 if you have the `strerror' function. */
#cmakedefine HAVE_STRERROR

/* Define to 1 if you have the `strerror_r' function. */
#cmakedefine HAVE_STRERROR_R

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H

/* Define to 1 if you have the `strlcat' function. */
#cmakedefine HAVE_STRLCAT

/* Define to 1 if you have the `strlcpy' function. */
#cmakedefine HAVE_STRLCPY

/* Define to 1 if you have the `strtoll' function. */
#cmakedefine HAVE_STRTOLL

/* Define to 1 if you have the `strtoq' function. */
#cmakedefine HAVE_STRTOQ

/* Define to 1 if you have the `strtoull' function. */
#cmakedefine HAVE_STRTOULL

/* Define to 1 if you have the `strtouq' function. */
#cmakedefine HAVE_STRTOUQ

/* Define to 1 if the system has the type `struct addrinfo'. */
#cmakedefine HAVE_STRUCT_ADDRINFO

/* Define to 1 if the system has the type `struct cmsgcred'. */
#cmakedefine HAVE_STRUCT_CMSGCRED

/* Define to 1 if the system has the type `struct option'. */
#cmakedefine HAVE_STRUCT_OPTION

/* Define to 1 if `sa_len' is a member of `struct sockaddr'. */
#cmakedefine HAVE_STRUCT_SOCKADDR_SA_LEN

/* Define to 1 if the system has the type `struct sockaddr_storage'. */
#cmakedefine HAVE_STRUCT_SOCKADDR_STORAGE

/* Define to 1 if `ss_family' is a member of `struct sockaddr_storage'. */
#cmakedefine HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY

/* Define to 1 if `ss_len' is a member of `struct sockaddr_storage'. */
#cmakedefine HAVE_STRUCT_SOCKADDR_STORAGE_SS_LEN

/* Define to 1 if `__ss_family' is a member of `struct sockaddr_storage'. */
#cmakedefine HAVE_STRUCT_SOCKADDR_STORAGE___SS_FAMILY

/* Define to 1 if `__ss_len' is a member of `struct sockaddr_storage'. */
#cmakedefine HAVE_STRUCT_SOCKADDR_STORAGE___SS_LEN

/* Define to 1 if `tm_zone' is a member of `struct tm'. */
#cmakedefine HAVE_STRUCT_TM_TM_ZONE

/* Define to 1 if you have the `symlink' function. */
#cmakedefine HAVE_SYMLINK

/* Define to 1 if you have the `sync_file_range' function. */
#cmakedefine HAVE_SYNC_FILE_RANGE

/* Define to 1 if you have the syslog interface. */
#cmakedefine HAVE_SYSLOG

/* Define to 1 if you have the <sys/ioctl.h> header file. */
#cmakedefine HAVE_SYS_IOCTL_H

/* Define to 1 if you have the <sys/ipc.h> header file. */
#cmakedefine HAVE_SYS_IPC_H

/* Define to 1 if you have the <sys/poll.h> header file. */
#cmakedefine HAVE_SYS_POLL_H

/* Define to 1 if you have the <sys/pstat.h> header file. */
#cmakedefine HAVE_SYS_PSTAT_H

/* Define to 1 if you have the <sys/resource.h> header file. */
#cmakedefine HAVE_SYS_RESOURCE_H

/* Define to 1 if you have the <sys/select.h> header file. */
#cmakedefine HAVE_SYS_SELECT_H

/* Define to 1 if you have the <sys/sem.h> header file. */
#cmakedefine HAVE_SYS_SEM_H

/* Define to 1 if you have the <sys/shm.h> header file. */
#cmakedefine HAVE_SYS_SHM_H

/* Define to 1 if you have the <sys/socket.h> header file. */
#cmakedefine HAVE_SYS_SOCKET_H

/* Define to 1 if you have the <sys/sockio.h> header file. */
#cmakedefine HAVE_SYS_SOCKIO_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/tas.h> header file. */
#cmakedefine HAVE_SYS_TAS_H

/* Define to 1 if you have the <sys/time.h> header file. */
#cmakedefine HAVE_SYS_TIME_H

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H

/* Define to 1 if you have the <sys/ucred.h> header file. */
#cmakedefine HAVE_SYS_UCRED_H

/* Define to 1 if you have the <sys/un.h> header file. */
#cmakedefine HAVE_SYS_UN_H

/* Define to 1 if you have the <termios.h> header file. */
#cmakedefine HAVE_TERMIOS_H

/* Define to 1 if your `struct tm' has `tm_zone'. Deprecated, use
   `HAVE_STRUCT_TM_TM_ZONE' instead. */
#cmakedefine HAVE_TM_ZONE

/* Define to 1 if you have the `towlower' function. */
#cmakedefine HAVE_TOWLOWER

/* Define to 1 if you have the external array `tzname'. */
#cmakedefine HAVE_TZNAME

/* Define to 1 if you have the <ucred.h> header file. */
#cmakedefine HAVE_UCRED_H

/* Define to 1 if the system has the type `uint64'. */
#cmakedefine HAVE_UINT64

/* Define to 1 if the system has the type `uint8'. */
#cmakedefine HAVE_UINT8

/* Define to 1 if the system has the type `uintptr_t'. */
#cmakedefine HAVE_UINTPTR_T

/* Define to 1 if the system has the type `union semun'. */
#cmakedefine HAVE_UNION_SEMUN

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H

/* Define to 1 if you have unix sockets. */
#cmakedefine HAVE_UNIX_SOCKETS

/* Define to 1 if you have the `unsetenv' function. */
#cmakedefine HAVE_UNSETENV

/* Define to 1 if the system has the type `unsigned long long int'. */
#cmakedefine HAVE_UNSIGNED_LONG_LONG_INT

/* Define to 1 if you have the `utime' function. */
#cmakedefine HAVE_UTIME

/* Define to 1 if you have the `utimes' function. */
#cmakedefine HAVE_UTIMES

/* Define to 1 if you have the <utime.h> header file. */
#cmakedefine HAVE_UTIME_H

/* Define to 1 if you have BSD UUID support. */
#cmakedefine HAVE_UUID_BSD

/* Define to 1 if you have E2FS UUID support. */
#cmakedefine HAVE_UUID_E2FS

/* Define to 1 if you have the <uuid.h> header file. */
#cmakedefine HAVE_UUID_H

/* Define to 1 if you have OSSP UUID support. */
#cmakedefine HAVE_UUID_OSSP

/* Define to 1 if you have the <uuid/uuid.h> header file. */
#cmakedefine HAVE_UUID_UUID_H

/* Define to 1 if you have the `vsnprintf' function. */
#cmakedefine HAVE_VSNPRINTF

/* Define to 1 if you have the <wchar.h> header file. */
#cmakedefine HAVE_WCHAR_H

/* Define to 1 if you have the `wcstombs' function. */
#cmakedefine HAVE_WCSTOMBS

/* Define to 1 if you have the `wcstombs_l' function. */
#cmakedefine HAVE_WCSTOMBS_L

/* Define to 1 if you have the <wctype.h> header file. */
#cmakedefine HAVE_WCTYPE_H

/* Define to 1 if you have the <winldap.h> header file. */
#cmakedefine HAVE_WINLDAP_H

/* Define to 1 if your compiler understands __builtin_bswap32. */
#cmakedefine HAVE__BUILTIN_BSWAP32

/* Define to 1 if your compiler understands __builtin_constant_p. */
#cmakedefine HAVE__BUILTIN_CONSTANT_P

/* Define to 1 if your compiler understands __builtin_types_compatible_p. */
#cmakedefine HAVE__BUILTIN_TYPES_COMPATIBLE_P

/* Define to 1 if your compiler understands __builtin_unreachable. */
#cmakedefine HAVE__BUILTIN_UNREACHABLE

/* Define to 1 if your compiler understands _Static_assert. */
#cmakedefine HAVE__STATIC_ASSERT

/* Define to 1 if your compiler understands __VA_ARGS__ in macros. */
#cmakedefine HAVE__VA_ARGS

/* Define to the appropriate snprintf length modifier for 64-bit ints. */
#cmakedefine INT64_MODIFIER

/* Define to 1 if `locale_t' requires <xlocale.h>. */
#cmakedefine LOCALE_T_IN_XLOCALE

/* Define as the maximum alignment requirement of any C data type. */
#cmakedefine MAXIMUM_ALIGNOF

/* Define bytes to use libc memset(). */
#cmakedefine MEMSET_LOOP_LIMIT

/* Define to the address where bug reports for this package should be sent. */
#cmakedefine PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#cmakedefine PACKAGE_NAME

/* Define to the full name and version of this package. */
#cmakedefine PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#cmakedefine PACKAGE_TARNAME

/* Define to the home page for this package. */
#cmakedefine PACKAGE_URL

/* Define to the version of this package. */
#cmakedefine PACKAGE_VERSION

/* Define to the name of a signed 128-bit integer type. */
#cmakedefine PG_INT128_TYPE

/* Define to the name of a signed 64-bit integer type. */
#cmakedefine PG_INT64_TYPE

/* Define to the name of the default PostgreSQL service principal in Kerberos
   (GSSAPI). (--with-krb-srvnam=NAME) */
#cmakedefine PG_KRB_SRVNAM

/* PostgreSQL major version as a string */
#cmakedefine PG_MAJORVERSION

/* Define to gnu_printf if compiler supports it, else printf. */
#cmakedefine PG_PRINTF_ATTRIBUTE

/* Define to 1 if "static inline" works without unwanted warnings from
   compilations where static inline functions are defined but not called. */
#cmakedefine PG_USE_INLINE

/* PostgreSQL version as a string */
#cmakedefine PG_VERSION

/* PostgreSQL version as a number */
#cmakedefine PG_VERSION_NUM

/* A string containing the version number, platform, and C compiler */
#cmakedefine PG_VERSION_STR

/* Define to 1 to allow profiling output to be saved separately for each
   process. */
#cmakedefine PROFILE_PID_DIR

/* RELSEG_SIZE is the maximum number of blocks allowed in one disk file. Thus,
   the maximum size of a single file is RELSEG_SIZE * BLCKSZ; relations bigger
   than that are divided into multiple files. RELSEG_SIZE * BLCKSZ must be
   less than your OS' limit on file size. This is often 2 GB or 4GB in a
   32-bit operating system, unless you have large file support enabled. By
   default, we make the limit 1 GB to avoid any possible integer-overflow
   problems within the OS. A limit smaller than necessary only means we divide
   a large relation into more chunks than necessary, so it seems best to err
   in the direction of a small limit. A power-of-2 value is recommended to
   save a few cycles in md.c, but is not absolutely required. Changing
   RELSEG_SIZE requires an initdb. */
#cmakedefine RELSEG_SIZE

/* The size of `long', as computed by sizeof. */
#cmakedefine SIZEOF_LONG

/* The size of `off_t', as computed by sizeof. */
#cmakedefine SIZEOF_OFF_T

/* The size of `size_t', as computed by sizeof. */
#cmakedefine SIZEOF_SIZE_T

/* The size of `void *', as computed by sizeof. */
#cmakedefine SIZEOF_VOID_P

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS

/* Define to 1 if strerror_r() returns a int. */
#cmakedefine STRERROR_R_INT

/* Define to 1 if your <sys/time.h> declares `struct tm'. */
#cmakedefine TM_IN_SYS_TIME

/* Define to 1 to build with assertion checks. (--enable-cassert) */
#cmakedefine USE_ASSERT_CHECKING

/* Define to 1 to build with Bonjour support. (--with-bonjour) */
#cmakedefine USE_BONJOUR

/* Define to 1 if you want float4 values to be passed by value.
   (--enable-float4-byval) */
#cmakedefine USE_FLOAT4_BYVAL

/* Define to 1 if you want float8, int8, etc values to be passed by value.
   (--enable-float8-byval) */
#cmakedefine USE_FLOAT8_BYVAL

/* Define to 1 if you want 64-bit integer timestamp and interval support.
   (--enable-integer-datetimes) */
#cmakedefine USE_INTEGER_DATETIMES

/* Define to 1 to build with LDAP support. (--with-ldap) */
#cmakedefine USE_LDAP

/* Define to 1 to build with XML support. (--with-libxml) */
#cmakedefine USE_LIBXML

/* Define to 1 to use XSLT support when building contrib/xml2.
   (--with-libxslt) */
#cmakedefine USE_LIBXSLT

/* Define to select named POSIX semaphores. */
#cmakedefine USE_NAMED_POSIX_SEMAPHORES

/* Define to build with OpenSSL support. (--with-openssl) */
#cmakedefine USE_OPENSSL

/* Define to 1 to build with PAM support. (--with-pam) */
#cmakedefine USE_PAM

/* Use replacement snprintf() functions. */
#cmakedefine USE_REPL_SNPRINTF

/* Define to select SysV-style semaphores. */
#cmakedefine USE_SYSV_SEMAPHORES

/* Define to select SysV-style shared memory. */
#cmakedefine USE_SYSV_SHARED_MEMORY

/* Define to select unnamed POSIX semaphores. */
#cmakedefine USE_UNNAMED_POSIX_SEMAPHORES

/* Define to select Win32-style semaphores. */
#cmakedefine USE_WIN32_SEMAPHORES

/* Define to select Win32-style shared memory. */
#cmakedefine USE_WIN32_SHARED_MEMORY

/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
   significant byte first (like Motorola and SPARC, unlike Intel). */
#if defined AC_APPLE_UNIVERSAL_BUILD
# if defined __BIG_ENDIAN__
#  define WORDS_BIGENDIAN 1
# endif
#else
# ifndef WORDS_BIGENDIAN
#  undef WORDS_BIGENDIAN
# endif
#endif

/* Size of a WAL file block. This need have no particular relation to BLCKSZ.
   XLOG_BLCKSZ must be a power of 2, and if your system supports O_DIRECT I/O,
   XLOG_BLCKSZ must be a multiple of the alignment requirement for direct-I/O
   buffers, else direct I/O may fail. Changing XLOG_BLCKSZ requires an initdb.
   */
#cmakedefine XLOG_BLCKSZ

/* XLOG_SEG_SIZE is the size of a single WAL file. This must be a power of 2
   and larger than XLOG_BLCKSZ (preferably, a great deal larger than
   XLOG_BLCKSZ). Changing XLOG_SEG_SIZE requires an initdb. */
#cmakedefine XLOG_SEG_SIZE



/* Number of bits in a file offset, on hosts where this is settable. */
#cmakedefine _FILE_OFFSET_BITS

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
#cmakedefine _LARGEFILE_SOURCE

/* Define for large files, on AIX-style hosts. */
#cmakedefine _LARGE_FILES

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#cmakedefine inline
#endif

/* Define to the type of a signed integer type wide enough to hold a pointer,
   if such a type exists, and if the system does not define it. */
#cmakedefine intptr_t

/* Define to empty if the C compiler does not understand signed types. */
#cmakedefine signed

/* Define to the type of an unsigned integer type wide enough to hold a
   pointer, if such a type exists, and if the system does not define it. */
#cmakedefine uintptr_t
